\chapter{Effect of parameters on the distribution of test statistic and w^{*}}



Let us first investigate the effect of parameters on the empirical distribution of the test statistic, under null and alternative.
 For our Multivariate Normal and Dirichlet models, consider the signal and noise dimensions $p$ and $q$ respectively.
  An increase in $p$ leads to the inflation of the test statistic under alternative
  \ref{fig-stats-p}.


 
<<null-alt,  echo=FALSE,fig=FALSE,results=hide,cache=TRUE ,trace=TRUE>>=
source("./src/Null.Alt.Stat.for.JOFC.R")
oos.stats<-compute.stats.for.params(params.list,"p_r")

oos.diss.all.params.0 <- oos.stats$stats.0
oos.diss.all.params.A <- oos.stats$stats.A

colors.vec<-c("red","blue","green","black","gold4",
		"azure","darkgrey","purple")

par(lwd=2)
@


<<fig-stats-p, echo=FALSE,fig=TRUE,results=hide,cache=FALSE,dependson=null-alt>>=
  fix.i <-1

   par(lty=1)
   first.est<- density(oos.diss.all.params.0[1,fix.i,])
  plot(first.est, col= colors.vec[1],
		  lty=1,type='l',ylim=c(0,0.2),main="")
  for (j in 2:5){
    lines(density(oos.diss.all.params.0[1+(j-1)*4,fix.i,],bw=first.est$bw), col= colors.vec[j])
  }

  par(lty=3)
  first.est.a<-density(oos.diss.all.params.A[1,fix.i,])
  lines(first.est.a, col= colors.vec[1],lty=3,ylim=c(0,0.2))
  for (j in 2:5){
    lines(density(oos.diss.all.params.A[1+(j-1)*4,fix.i,],bw=first.est.a$bw), col= colors.vec[j])
  }
  legend.txt<- p.vals[1+(0:4)*5]
  title("Null and alternative test statistics for different p values ")
  legend("bottomright",legend=legend.txt,col=colors.vec[1:5],lty=rep(1,5))
@



 , so any $w$ value that takes advantage of this situation and captures fidelity will limit the growth of the test statistic under alternative. So such $w$ values that are small enough to preserve fidelity, yet large enough to not lose significantly from commensurability will have increases in power to become $w^*$. 




Consider  an increase in $r$, this will cause the test statistic under null to be stochastically smaller,
 leading to a smaller critical value. So , a increase in priority of fidelity,
  which corresponds to smaller $w$ might lead to the increase in the test statistic under alternative, and therefore an increase in power.\ref{fig-stats-r}  



<<fig-stats-r, echo=FALSE,fig=TRUE, results=hide, cache=FALSE,dependson=null-alt >>=
	
par(lty=1)
first.est<- density(oos.diss.all.params.0[1,fix.i,])
	plot(first.est, col= colors.vec[1],
		  lty=1,type='l', ylim=c(0,0.4),main="")
 	for (j in 2:4){
		lines(density(oos.diss.all.params.0[j,fix.i,],bw=first.est$bw), col= colors.vec[j])
  	}
	
	par(lty=3)
	first.est.a<-density(oos.diss.all.params.A[1,fix.i,])
	lines(first.est.a, col= colors.vec[1])
	for (j in 2:4){
		lines(density(oos.diss.all.params.A[j,fix.i,],bw=first.est.a$bw), col= colors.vec[j])
  	}
	title("Null and alternative test statistics for different r values ")
	legend.txt<- r.vals[1:4]
	legend("bottomright",legend=legend.txt,col=colors.vec[1:4],lty=rep(1,4))
@

Consider increases in $c$, which will increase the dissimilarity  both between matched and between unmatched vectors. 


<<stats-c-sim, echo=FALSE,fig=FALSE,results=hide,cache=TRUE,trace=TRUE >>=
source("./src/Null.Alt.Stat.for.JOFC.R")

debug.mode<-FALSE
if(debug.mode){
	n.vals<-c(50)
	nmc<-3
	s<-1
}


params$w.vals.param<-c(0.75)	

c.vals<- c(0,0.01,0.1,0.2,0.5,0.8,0.99)
p.vals<-rep(5,length(c.vals))
r.vals<-rep(30,length(c.vals))
q.vals<-rep(10,length(c.vals))


param.index.count<-length(c.vals)
params.list <- rep(list(params),param.index.count)



for (i in (1:length(c.vals))){
	params.list[[i]]$r.param <- r.vals[i]
	params.list[[i]]$p.param <- p.vals[i]
	params.list[[i]]$q.param <- q.vals[i]
	params.list[[i]]$c.val.param <- c.vals[i]
}

debug.mode <- FALSE
oos.stats.c<-compute.stats.for.params(params.list,"c")
oos.diss.all.params.c.0 <- oos.stats.c$stats.0
oos.diss.all.params.c.A <- oos.stats.c$stats.A
sfStop()
@

<<fig-stats-c, echo=FALSE,fig=TRUE,results=hide,cache=FALSE,dependson=stats-c-sim >>=


fix.i<-1

first.est<- density(oos.diss.all.params.c.0[1,fix.i,],bw="bcv")
par(lty=1)
plot(first.est, col= colors.vec[1],
		lty=1,type='l',ylim=c(0,0.4),main="")
for (j in 2:length(c.vals)) {
	lines(density(oos.diss.all.params.c.0[j,fix.i,],bw=first.est$bw), col= colors.vec[j])
}

par(lty=3)
first.est.a<-density(oos.diss.all.params.c.A[1,fix.i,])
lines(first.est.a, col= colors.vec[1])
for (j in 2:length(c.vals)) {
	lines(density(oos.diss.all.params.c.A[j,fix.i,],bw=first.est.a$bw), col= colors.vec[j])
}


title("Null and alternative test statistics for different c values ")
legend.txt<- c.vals
legend("bottomright",legend=legend.txt,col=colors.vec[1:length(c.vals)],lty=rep(1,5))





if (0) {

fix.i<-1
oos.stats.plot <- oos.diss.all.params.c.0[1,fix.i,oos.diss.all.params.c.0[1,fix.i,]<0.12]
first.est<- density(oos.stats.plot,bw="nrd0")
	par(lty=1)
  plot(first.est, col= colors.vec[1],
		  lty=1,type='l',main="")
  print(length(oos.stats.plot))
 for (j in 2:length(c.vals)) {
	 oos.stats.j <- oos.diss.all.params.c.0[j,fix.i,oos.diss.all.params.c.0[j,fix.i,]<0.12]
	 print(length(oos.stats.j))
  lines(density(oos.stats.j,bw="nrd0"), col= colors.vec[j])
	}
	
   par(lty=3)
   first.est.a<-density(oos.diss.all.params.c.A[1,fix.i,])
  lines(first.est.a, col= colors.vec[1])
  for (j in 2:length(c.vals)) {
  lines(density(oos.diss.all.params.c.A[j,fix.i,],bw=first.est.a$bw), col= colors.vec[j])
  }
  
  
  title("Null and alternative test statistics for different c values ")
  legend.txt<- c.vals
  legend("bottomright",legend=legend.txt,col=colors.vec[1:length(c.vals)],lty=rep(1,5))
}
@




Consider increases in $q$,  the test statistic under both null and alternative is inflated\ref{fig-stats-q}. 

<<stats-q-sim, echo=FALSE,fig=FALSE,results=hide,cache=TRUE ,trace=TRUE>>=
source("./src/Null.Alt.Stat.for.JOFC.R")

debug.mode<-FALSE
if(debug.mode){
	n.vals<-c(50)
	nmc<-3
	s<-1
}


params$w.vals.param<-c(0.75)	
param.index.count<-4
params.list <- rep(list(params),param.index.count)
p.vals<-rep(5,4)
r.vals<-rep(50,4)
q.vals<-c(5,10,25,40)




for (i in (1:length(q.vals))){
	params.list[[i]]$r.param <- r.vals[i]
	params.list[[i]]$p.param <- p.vals[i]
	params.list[[i]]$q.param <- q.vals[i]
}

debug.mode <- FALSE
oos.stats.q<-compute.stats.for.params(params.list,"q")
oos.diss.all.params.q.0 <- oos.stats.q$stats.0
oos.diss.all.params.q.A <- oos.stats.q$stats.A
sfStop()
@

<<fig-stats-q, echo=FALSE,fig=TRUE,results=hide,cache=FALSE, dependson=stats-q-sim >>=

fix.i<-1
first.est<- density(oos.diss.all.params.q.0[1,fix.i,])
	par(lty=1)
  plot(first.est, col= colors.vec[1],
		  lty=1,type='l',ylim=c(0,0.4),main="")
 for (j in 2:length(q.vals)) {
  lines(density(oos.diss.all.params.q.0[j,fix.i,],bw=first.est$bw), col= colors.vec[j])
	}
   par(lty=3)
   first.est.a<-density(oos.diss.all.params.q.A[1,fix.i,])
  lines(first.est.a, col= colors.vec[1])
  for (j in 2:length(q.vals)) {
  lines(density(oos.diss.all.params.q.A[j,fix.i,],bw=first.est.a$bw), col= colors.vec[j])
  }
  
  
  title("Null and alternative test statistics for different q values ")
  legend.txt<- q.vals
  legend("bottomright",legend=legend.txt,col=colors.vec[1:4],lty=rep(1,4))
@
 If commensurability can be preserved in the face of the increase in $q$, the power of the test may be preserved. However a very large increase in $w$ is not guarenteed to increase the preservation of commensurability, since the extra dimensions are noise, trying to   make the differences between coordinates  small in those dimensions will not  help in power, in fact may be disruptive since,
  more fidelity may be lost in the effort to bring the pair of points together.



<<sim-two-cond-vary-p,fig=FALSE,echo=FALSE,results=verbatim,cache=TRUE,prefix.string="JOFCpaper",dependson=Init>>=
graphics.off()
load.project()
debug.mode<- FALSE
source("./src/runningParams.R")
gaussian.sim<-TRUE
dirichlet.sim<-FALSE
run.for.Sweave<-TRUE
vary.params<-TRUE


params$nmc<-100
p.vals.vec<-c(2,5,10,15)
q.vals.vec<-10
r.vals.vec<-20
c.vals.vec<-NULL

source("./src/GaussianSimFidCommTradeoffMain.R")
sfStop()
graphics.off()
@

<<sim-two-cond-vary-q,fig=FALSE,echo=FALSE,results=verbatim,cache=TRUE,prefix.string="JOFCpaper",
dependson=sim-two-cond-vary-p>>=
debug.mode<- FALSE

p.vals.vec<-5
q.vals.vec<-c(5,10,15,20)


source("./src/GaussianSimFidCommTradeoffMain.R")
sfStop()
graphics.off()
@

<<sim-two-cond-vary-r,fig=FALSE,echo=FALSE,results=verbatim,cache=TRUE,prefix.string="JOFCpaper",
dependson=sim-two-cond-vary-p>>=
debug.mode<- FALSE
r.vals.vec<-c(3,10,50,100)
q.vals.vec<-5
source("./src/GaussianSimFidCommTradeoffMain.R")
sfStop()
graphics.off()
@

<<sim-two-cond-vary-c,fig=FALSE,echo=FALSE,results=verbatim,cache=TRUE,prefix.string="JOFCpaper",
dependson=sim-two-cond-vary-p>>=
debug.mode<- FALSE
r.vals.vec<-20
c.vals<-c(0.5,0.2,0.1,0.001)

source("./src/GaussianSimFidCommTradeoffMain.R")
sfStop()
graphics.off()
@



\chapter{Relationship to Kernels}
\label{sec:Kernels}
\chaptermark{Optional running chapter heading}

Introduction.

A citation \cite{A}. 
A citation without brackets \citen{B}. 
Multiple citations \cite{A, B, C}.

\section{Kernel Methods for Learning}
\label{sec:section}

This is a section.  Here's a reference to a different section:
\ref{sec:subsection}.

\subsection{Kernel PCA}
\label{sec:subsection}

This is a subsection.

% \begin{figure}[t]
% \centering
% \includegraphics[width=\textwidth]{figure}
% \caption{Caption.}
% \label{fig:figure}
% \end{figure}
% 
% \begin{figure}[t]
% \centering
% \begin{tabular}{c c}
% \includegraphics[height=2.5in]{figureA} &
% \includegraphics[width=3in]{figureB}\\
% (A) & (B)
% \end{tabular}
% \caption{Two figures.}
% \label{fig:twofigures}
% \end{figure}

\section[Optional table of contents heading]{Section with\\linebreaks in\\the
name}

This is another section.

\subsection{Kernel CCA}

\subsubsection{Subsubsection}

\paragraph{Heading level below subsubsection}
\label{sec:paragraph}

And I quote: 
%
\begin{quote}
La la la.
\end{quote}
%
\noindent No ident after end of quote.  

Another paragraph with a list:
%
\begin{itemize}
%  
\item Item 1
%
\item Item 2
%
\end{itemize}
%
\noindent Again, we don't indent here.
\section{Multiple Kernel Learning}